
plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	//쿼리 DSL 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"	
}

group = 'com.cloudians'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

	ext {
		queryDslVersion = "5.0.0"
	}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.jcraft:jsch:0.1.55'
	
	implementation 'org.apache.sshd:sshd-core:2.7.0'
implementation 'org.apache.sshd:sshd-common:2.7.0'
implementation 'org.apache.sshd:sshd-netty:2.7.0'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	// Database driver
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Data Mapping
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:2.4.4'

	// firebase stroage
	     implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.3.0' // 최신 버전 확인 필요
    // implementation 'com.google.firebase:firebase-storage:20.0.0'

	// JWT Libraries
implementation 'com.auth0:java-jwt:3.19.2'
 implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	
	//쿼리DSL 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
		providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	
}

tasks.named('test') {
	useJUnitPlatform()
}

//쿼리DSL 추가 빌드시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//쿼리DSL 추가 빌드끝
